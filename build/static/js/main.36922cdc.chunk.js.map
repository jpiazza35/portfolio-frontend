{"version":3,"sources":["assets/img/avatar.png","components/Intro/Intro.js","components/About/About.js","components/Portfolio/PortfolioCard.js","components/Portfolio/Portfolio.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Intro","useState","mainNav","setMainNav","heroClipped","useRef","logo","hamburgerMenu","heroTextBox","useEffect","TweenMax","fromTo","current","scaleX","x","opacity","delay","yPercent","className","ref","onClick","console","log","to","duration","offset","spy","smooth","isDynamic","href","About","information","setInformation","polygonWasAnimated","setPolygonWasAnimated","descriptionWasAnimated","setDescriptionWasAnimated","polygon","title","description","pills","buttons","axios","get","then","res","data","polygonIntersection","useIntersection","root","rootMargin","threshold","descriptionIntersection","isIntersecting","xPercent","alt","src","photo","name","about_me","skills","map","skill","index","PortfolioCard","project","fadeProperties","timeSlide","transitionDuration","infinite","indicators","arrows","card","wasAnimated","setWasAnimated","cardIntersection","images","image","tecnologies","pill","link","repo","Portfolio","projects","setProjects","textbox","id","Math","floor","random","Footer","polygonText","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.36922cdc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.963722b1.png\";","import React, { useState, useRef, useEffect } from \"react\";\nimport { TweenMax } from \"gsap\";\nimport './Intro.css';\nimport { Link } from 'react-scroll';\n\nconst Intro = () => {\n\n  const [mainNav, setMainNav] = useState(false);\n  const heroClipped = useRef(null);\n  const logo = useRef(null);\n  const hamburgerMenu = useRef(null);\n  const heroTextBox = useRef(null);\n\n  function open() {\n    console.log(mainNav);\n    if(mainNav)\n      setMainNav(false);\n    else\n      setMainNav(true);\n  };\n\n  useEffect(() => {\n    TweenMax.fromTo(\n      heroClipped.current,\n      1,\n      {scaleX: 0},\n      {scaleX:1}\n    );\n    TweenMax.fromTo(\n      logo.current,\n      1,\n      {x: -200, opacity: 0},\n      {delay: .5, x: 0, opacity: 1 }\n    );\n    TweenMax.fromTo(\n      hamburgerMenu.current,\n      1,\n      {x: 200, opacity: 0},\n      {delay: .5, x: 0, opacity: 1 }\n    );\n    TweenMax.fromTo(\n      heroTextBox.current,\n      1, \n      { yPercent: 40, opacity: 0},\n      {delay: 1.3, yPercent: -40, opacity: 1} \n    );\n  }, [])\n\n  return(\n      <div className=\"intro-container\">\n        <header className=\"intro\">\n          <nav className={`main-nav ${mainNav ? 'open' : ''}`}>\n            <div ref={logo} className=\"logo\">\n              <a>Nacho Piazza</a>\n            </div>\n            <div ref={hamburgerMenu} className=\"hamburger-menu\" onClick={ ()=> open() }>\n              <span className=\"bar\"></span>\n            </div>\n            <div className={`nav-list `}  >\n              <li className=\"nav-item\">\n                <Link to=\"about\" duration={1000} offset={0} spy={true} smooth={true} isDynamic={true}>\n                  <a href=\"\" className=\"nav-link\">About Myself</a>\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/CV.pdf\" className=\"nav-link\">My CV</a>\n              </li>\n              <li className=\"nav-item\">\n              <Link to=\"portfolio\" duration={1000} offset={0} spy={true} smooth={true} isDynamic={true}>\n                <a href=\"\" className=\"nav-link\">Portfolio</a>\n              </Link>\n              </li>\n            </div>\n          </nav>\n        </header>\n        <section className=\"hero\">\n          <div ref={heroClipped} className=\"hero-clipped\">\n            <div ref={heroTextBox} className=\"hero-textbox\">\n                <h1 className=\"main-heading\">I'm Nacho Piazza</h1>\n                <h2 className=\"sub-heading\">Welcome to my Portfolio, here you can check my profile</h2>\n                <Link to=\"about\" duration={1000} offset={0} spy={true} smooth={true} isDynamic={true}>\n                  <button className=\"cta-btn crimson\">Take a look</button>\n                </Link>\n            </div>\n          </div>\n        </section>\n      </div>\n  )\n};\n\nexport default Intro;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useIntersection } from 'react-use'\nimport axios from \"axios\";\nimport \"./About.css\";\nimport photo from \"../../assets/img/avatar.png\";\nimport { TweenMax } from \"gsap\";\nimport { Link } from 'react-scroll';\n\nconst About = () => {\n  const [information, setInformation] = useState({});\n  const [polygonWasAnimated, setPolygonWasAnimated] = useState(false)\n  const [descriptionWasAnimated, setDescriptionWasAnimated] = useState(false);\n  const polygon = useRef(null);\n  const title = useRef(null);\n  const description = useRef(null);\n  const pills = useRef(null);\n  const buttons = useRef(null)\n\n  useEffect(() => {\n    axios\n      .get(\"https://jp-portfolio-backend.herokuapp.com/about\")\n      .then((res) => {\n        setInformation(res.data[0]);\n      });\n  }, [setInformation]);\n\n  const polygonIntersection = useIntersection(polygon,{\n    root: null,\n    rootMargin: '0px',\n    threshold: 0.01\n  });\n\n  const descriptionIntersection = useIntersection(title, {\n    root: null,\n    rootMargin: '0px',\n    threshold: 0.01\n  });\n\n  const animatePolygon = () => {\n    if(!polygonWasAnimated){\n      TweenMax.fromTo(polygon.current, 2, { scaleX: 0 }, { scaleX: 1 });\n      setPolygonWasAnimated(true)\n    }\n  };\n  const animateDesctiption = () => {\n    if(!descriptionWasAnimated){\n      TweenMax.fromTo(title.current, 1, { xPercent: 40, opacity: 0 }, {delay: 0 ,xPercent: 0, opacity: 1 });\n      TweenMax.fromTo(description.current, 1, { xPercent: 40, opacity: 0 }, {delay: 0.5 ,xPercent: 0, opacity: 1 });\n      TweenMax.fromTo(pills.current, 1, { xPercent: 40, opacity: 0 }, {delay: 1 ,xPercent: 0, opacity: 1 });\n      TweenMax.fromTo(buttons.current, 1, { xPercent: 40, opacity: 0 }, {delay: 1.5 ,xPercent: 0, opacity: 1 });\n      setDescriptionWasAnimated(true);\n    }\n  }\n\n  if(polygonIntersection && polygonIntersection.isIntersecting ){\n    animatePolygon();\n  }\n\n  if(descriptionIntersection && descriptionIntersection.isIntersecting){\n    animateDesctiption();\n  }\n\n  return (\n    <div className=\"about\">\n      <div ref={polygon} className=\"about-polygon\"></div>\n      <div className=\"about-container\">\n        <div className=\"container-photo\">\n          <img  className=\"about-profile-photo\" alt=\"profile\" src={photo} />\n        </div>\n        <div className=\"description\">\n          <h1 ref={title} className=\"about-title main-heading\">About me</h1>\n          <p ref={description} className=\"about-content\">\n            I am {information.name}. {information.about_me}\n          </p>\n          <div ref={pills} className=\"about-pill-zone\">\n            <p className=\"about-content\">\n              Below some of the technologies that i use:\n            </p>\n            <ul>\n              {information.skills &&\n                information.skills.map((skill, index) => (\n                  <p className=\"about-pills\">{skill}</p>\n                ))}\n            </ul>\n          </div>\n          <div ref={buttons} className=\"about-buttons\">\n          <Link to=\"portfolio\" duration={1000} offset={0} spy={true} smooth={true} isDynamic={true}>\n            <button className=\"cta-btn danger\">My projects</button>\n          </Link>\n            <a href=\"/CV.pdf\">\n              <button className=\"cta-btn danger\">My CV</button>\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","import React, { useRef, useState } from \"react\";\nimport { useIntersection } from \"react-use\";\nimport \"./PortfolioCard.css\";\nimport { TweenMax } from \"gsap\";\nimport { Fade } from \"react-slideshow-image\";\nimport { FaGithub, FaLink } from 'react-icons/fa';\n\nconst PortfolioCard = ({ project, timeSlide }) => {\n  const fadeProperties = {\n    duration: timeSlide,\n    transitionDuration: 500,\n    infinite: true,\n    indicators: true,\n    arrows: true,\n  };\n\n  const card = useRef(null);\n  const [wasAnimated, setWasAnimated] = useState(false);\n  const cardIntersection = useIntersection(card, {\n    root: null,\n    rootMargin: \"0px\",\n    threshold: 0.01,\n  });\n\n  function animate() {\n    if(!wasAnimated){\n      TweenMax.fromTo(\n        card.current,\n        1,\n        { yPercent: 40, opacity: 0 },\n        { yPercent: 0, opacity: 1 }\n        );\n        setWasAnimated(true);\n    }\n  }\n\n  if (cardIntersection && cardIntersection.isIntersecting) animate();\n\n\n  return (\n    <div ref={card} className=\"portfolio-card\">\n      <div className=\"carousel-container\">\n        <Fade {...fadeProperties}>\n          {project.images.map((image, index) => (\n            <div className=\"each-fade\">\n              <img className=\"carousel-image\" alt={index} src={image} />\n            </div>\n          ))}\n        </Fade>\n      </div>\n      <div className=\"portfolio-card-textbox\">\n        <div className=\"card-pills\">\n          {project.tecnologies.map((pill, index) =>\n            <p className=\"card-pill\">{pill}</p>\n          )}\n        </div>\n        <h1>{project.name}</h1>\n        <p>{project.description}</p>\n        <div className=\"portfolio-button-zone\">\n        <a href={project.link}>\n            <button className=\"portfolio-card-button\"><FaLink /> Demo</button>\n          </a>\n          <a href={project.repo}>\n            <button className=\"portfolio-card-button\"><FaGithub /> Repo</button>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PortfolioCard;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useIntersection } from \"react-use\";\nimport \"./Portfolio.css\";\nimport axios from \"axios\";\nimport { TweenMax } from \"gsap\";\nimport PortfolioCard from \"./PortfolioCard\";\n\nconst Portfolio = () => {\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    axios\n      .get(\"https://jp-portfolio-backend.herokuapp.com/portfolio\")\n      .then((res) => {\n        setProjects(res.data);\n      });\n  }, [setProjects]);\n\n  const polygon = useRef(null);\n  const textbox = useRef(null);\n  const [wasAnimated, setWasAnimated] = useState(false);\n  const polygonIntersection = useIntersection(polygon,{\n    root: null,\n    rootMargin: '0px',\n    threshold: 0.01\n  });\n\n  function randomTimeSlide() {\n    var result = 1000 + Math.floor((4000 - 1000) * Math.random());\n    return result\n  }\n\n  function animate () {\n    if (!wasAnimated) {\n      TweenMax.fromTo(polygon.current, 1, { scaleX: 0 }, { scaleX: 1 });\n      TweenMax.fromTo(\n        textbox.current,\n        1,\n        { yPercent: 40, opacity: 0 },\n        { delay: 1.3, yPercent: -50, opacity: 1 }\n      );\n      setWasAnimated(true);\n    }\n  };\n  \n  if(polygonIntersection && polygonIntersection.isIntersecting){\n    animate();\n  }\n\n  return (\n    <>\n      <div className=\"portfolio\">\n        <div className=\"portfolio-intro\">\n          <div ref={polygon} className=\"portfolio-intro-polygon\">\n            <div ref={textbox} className=\"portfolio-intro-textbox\">\n              <h1 className=\"portfolio-title main-heading\">Projects & Certifications</h1>\n              <p className=\"portfolio-description sub-heading\">\n                Here, I will put all my projects from Git as well as my current done courses.\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"portfolio-container\">\n          <div className=\"portfolio-cards\">\n           {projects &&\n              projects.map((project, index) => (\n                <PortfolioCard id={index} project={project} timeSlide={randomTimeSlide()}/>\n            ))} \n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Portfolio;\n","import React, { useRef, useState } from 'react';\nimport './Footer.css'\nimport { useIntersection } from \"react-use\";\nimport { TweenMax } from \"gsap\";\nimport { FaGithub, FaLinkedin } from 'react-icons/fa';\n\n\nconst Footer = () => {\n    const polygon = useRef(null);\n    const polygonText = useRef(null);\n    const textbox = useRef(null);\n    const [wasAnimated, setWasAnimated] = useState(false);\n    const polygonIntersection = useIntersection(polygon,{\n        root: null,\n        rootMargin: '0px',\n        threshold: 0.01\n    });\n\n    function animate() {\n        if(!wasAnimated) {\n            TweenMax.fromTo(polygon.current, 1, { scaleX: 0 }, { scaleX: 1 });\n            TweenMax.fromTo(polygonText.current, 1.5, { delay: 1, scaleX: 0 }, { scaleX: 1 });\n            TweenMax.fromTo(\n                textbox.current,\n                1,\n                { yPercent: 40, opacity: 0 },\n                { delay: 1.5, yPercent: 0, opacity: 1 }\n              );\n              setWasAnimated(true);\n        }\n    }\n\n    if(polygonIntersection && polygonIntersection.isIntersecting) animate();\n\n    return (\n        <div className=\"footer\">\n            <div ref={polygon} className=\"footer-polygon\"></div>\n                <div ref={polygonText} className=\"footer-polygon\">\n                    <div ref={textbox} className=\"footer-textbox\">\n                        <p className=\"footer-autor\">© 2021 Jose Ignacio Piazza</p>\n                        <div className=\"footer-icon-zone\">\n                            <a href=\"https://github.com/jpiazza35\">\n                                <FaGithub />\n                            </a>\n                            <a href=\"https://www.linkedin.com/in/joseipiazza/\">\n                                <FaLinkedin />\n                            </a>\n                        </div>\n                    </div>\n                </div>\n        </div>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\nimport './App.css';\nimport Intro from \"./components/Intro/Intro\";\nimport About from './components/About/About'\nimport Portfolio from './components/Portfolio/Portfolio'\nimport Footer from \"./components/Footer/Footer\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Intro />\n      <About />\n      <Portfolio />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}