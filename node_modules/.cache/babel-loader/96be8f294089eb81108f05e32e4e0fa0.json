{"ast":null,"code":"var _jsxFileName = \"/home/jpiazza/desarrollo/react javascripts/portfolio-integration/portfolio-frontend/src/components/About/About.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useIntersection } from 'react-use';\nimport axios from \"axios\";\nimport \"./About.css\";\nimport photo from \"../../assets/img/circle-cropped.png\";\nimport { TweenMax } from \"gsap\";\nimport { Link } from 'react-scroll';\n\nconst About = () => {\n  const [information, setInformation] = useState({});\n  const [polygonWasAnimated, setPolygonWasAnimated] = useState(false);\n  const [descriptionWasAnimated, setDescriptionWasAnimated] = useState(false);\n  const polygon = useRef(null);\n  const title = useRef(null);\n  const description = useRef(null);\n  const pills = useRef(null);\n  const buttons = useRef(null);\n  useEffect(() => {\n    axios.get(\"https://jp-portfolio-backend.herokuapp.com/about\").then(res => {\n      setInformation(res.data[0]);\n    });\n  }, [setInformation]);\n  const polygonIntersection = useIntersection(polygon, {\n    root: null,\n    rootMargin: '0px',\n    threshold: 0.01\n  });\n  const descriptionIntersection = useIntersection(title, {\n    root: null,\n    rootMargin: '0px',\n    threshold: 0.01\n  });\n\n  const animatePolygon = () => {\n    if (!polygonWasAnimated) {\n      TweenMax.fromTo(polygon.current, 2, {\n        scaleX: 0\n      }, {\n        scaleX: 1\n      });\n      setPolygonWasAnimated(true);\n    }\n  };\n\n  const animateDesctiption = () => {\n    if (!descriptionWasAnimated) {\n      TweenMax.fromTo(title.current, 1, {\n        xPercent: 40,\n        opacity: 0\n      }, {\n        delay: 0,\n        xPercent: 0,\n        opacity: 1\n      });\n      TweenMax.fromTo(description.current, 1, {\n        xPercent: 40,\n        opacity: 0\n      }, {\n        delay: 0.5,\n        xPercent: 0,\n        opacity: 1\n      });\n      TweenMax.fromTo(pills.current, 1, {\n        xPercent: 40,\n        opacity: 0\n      }, {\n        delay: 1,\n        xPercent: 0,\n        opacity: 1\n      });\n      TweenMax.fromTo(buttons.current, 1, {\n        xPercent: 40,\n        opacity: 0\n      }, {\n        delay: 1.5,\n        xPercent: 0,\n        opacity: 1\n      });\n      setDescriptionWasAnimated(true);\n    }\n  };\n\n  if (polygonIntersection && polygonIntersection.isIntersecting) {\n    animatePolygon();\n  }\n\n  if (descriptionIntersection && descriptionIntersection.isIntersecting) {\n    animateDesctiption();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: polygon,\n    className: \"about-polygon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"about-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"about-profile-photo\",\n    alt: \"profile\",\n    src: photo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    ref: title,\n    className: \"about-title main-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"About me\"), /*#__PURE__*/React.createElement(\"p\", {\n    ref: description,\n    className: \"about-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"I am \", information.name, \". \", information.about_me), /*#__PURE__*/React.createElement(\"div\", {\n    ref: pills,\n    className: \"about-pill-zone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"about-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Below some of the technologies that i use:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, information.skills && information.skills.map((skill, index) => /*#__PURE__*/React.createElement(\"p\", {\n    className: \"about-pills\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }, skill)))), /*#__PURE__*/React.createElement(\"div\", {\n    ref: buttons,\n    className: \"about-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"portfolio\",\n    duration: 1000,\n    offset: 0,\n    spy: true,\n    smooth: true,\n    isDynamic: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"cta-btn danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"My projects\")), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/CV.pdf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"cta-btn danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"My CV\"))))));\n};\n\nexport default About;","map":{"version":3,"sources":["/home/jpiazza/desarrollo/react javascripts/portfolio-integration/portfolio-frontend/src/components/About/About.js"],"names":["React","useState","useEffect","useRef","useIntersection","axios","photo","TweenMax","Link","About","information","setInformation","polygonWasAnimated","setPolygonWasAnimated","descriptionWasAnimated","setDescriptionWasAnimated","polygon","title","description","pills","buttons","get","then","res","data","polygonIntersection","root","rootMargin","threshold","descriptionIntersection","animatePolygon","fromTo","current","scaleX","animateDesctiption","xPercent","opacity","delay","isIntersecting","name","about_me","skills","map","skill","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useIntersection } from 'react-use'\nimport axios from \"axios\";\nimport \"./About.css\";\nimport photo from \"../../assets/img/circle-cropped.png\";\nimport { TweenMax } from \"gsap\";\nimport { Link } from 'react-scroll';\n\nconst About = () => {\n  const [information, setInformation] = useState({});\n  const [polygonWasAnimated, setPolygonWasAnimated] = useState(false)\n  const [descriptionWasAnimated, setDescriptionWasAnimated] = useState(false);\n  const polygon = useRef(null);\n  const title = useRef(null);\n  const description = useRef(null);\n  const pills = useRef(null);\n  const buttons = useRef(null)\n\n  useEffect(() => {\n    axios\n      .get(\"https://jp-portfolio-backend.herokuapp.com/about\")\n      .then((res) => {\n        setInformation(res.data[0]);\n      });\n  }, [setInformation]);\n\n  const polygonIntersection = useIntersection(polygon,{\n    root: null,\n    rootMargin: '0px',\n    threshold: 0.01\n  });\n\n  const descriptionIntersection = useIntersection(title, {\n    root: null,\n    rootMargin: '0px',\n    threshold: 0.01\n  });\n\n  const animatePolygon = () => {\n    if(!polygonWasAnimated){\n      TweenMax.fromTo(polygon.current, 2, { scaleX: 0 }, { scaleX: 1 });\n      setPolygonWasAnimated(true)\n    }\n  };\n  const animateDesctiption = () => {\n    if(!descriptionWasAnimated){\n      TweenMax.fromTo(title.current, 1, { xPercent: 40, opacity: 0 }, {delay: 0 ,xPercent: 0, opacity: 1 });\n      TweenMax.fromTo(description.current, 1, { xPercent: 40, opacity: 0 }, {delay: 0.5 ,xPercent: 0, opacity: 1 });\n      TweenMax.fromTo(pills.current, 1, { xPercent: 40, opacity: 0 }, {delay: 1 ,xPercent: 0, opacity: 1 });\n      TweenMax.fromTo(buttons.current, 1, { xPercent: 40, opacity: 0 }, {delay: 1.5 ,xPercent: 0, opacity: 1 });\n      setDescriptionWasAnimated(true);\n    }\n  }\n\n  if(polygonIntersection && polygonIntersection.isIntersecting ){\n    animatePolygon();\n  }\n\n  if(descriptionIntersection && descriptionIntersection.isIntersecting){\n    animateDesctiption();\n  }\n\n  return (\n    <div className=\"about\">\n      <div ref={polygon} className=\"about-polygon\"></div>\n      <div className=\"about-container\">\n        <div className=\"container-photo\">\n          <img  className=\"about-profile-photo\" alt=\"profile\" src={photo} />\n        </div>\n        <div className=\"description\">\n          <h1 ref={title} className=\"about-title main-heading\">About me</h1>\n          <p ref={description} className=\"about-content\">\n            I am {information.name}. {information.about_me}\n          </p>\n          <div ref={pills} className=\"about-pill-zone\">\n            <p className=\"about-content\">\n              Below some of the technologies that i use:\n            </p>\n            <ul>\n              {information.skills &&\n                information.skills.map((skill, index) => (\n                  <p className=\"about-pills\">{skill}</p>\n                ))}\n            </ul>\n          </div>\n          <div ref={buttons} className=\"about-buttons\">\n          <Link to=\"portfolio\" duration={1000} offset={0} spy={true} smooth={true} isDynamic={true}>\n            <button className=\"cta-btn danger\">My projects</button>\n          </Link>\n            <a href=\"/CV.pdf\">\n              <button className=\"cta-btn danger\">My CV</button>\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n"]},"metadata":{},"sourceType":"module"}